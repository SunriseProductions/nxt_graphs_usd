{
    "version": "1.17",
    "alias": "pxr_usd_helpers",
    "color": "#00a5e6",
    "mute": false,
    "solo": false,
    "meta_data": {
        "positions": {
            "/FindAllVariants": [
                3071.1357713097223,
                59.58111725644964
            ],
            "/ListModules": [
                2982.850671172257,
                -33.181594117255784
            ]
        }
    },
    "nodes": {
        "/FindAllVariants": {
            "attrs": {
                "prim": {},
                "variant_options": {},
                "variant_set_names": {},
                "variant_set_selection": {}
            },
            "code": [
                "vsets = self.prim.GetVariantSets()",
                "self.variant_set_names = vsets.GetNames()",
                "self.variant_set_selection = {}",
                "self.variant_options = {}",
                "",
                "for vset_name in variant_set_names:",
                "    logging.debug('  variant set:', vset_name)",
                "    vset = vsets.GetVariantSet(vset_name)",
                "    selection = vset.GetVariantSelection()",
                "    variant_set_selection[vset_name] = selection",
                "    logging.debug('    has selection:', selection)",
                "    logging.debug('    has options:')",
                "    opt_list = []",
                "    for opt in vset.GetVariantNames():",
                "        opt_list.append(opt)",
                "        logging.debug('      ', opt)",
                "    variant_options[vset_name] = opt_list",
                "",
                ""
            ]
        },
        "/ListModules": {
            "start_point": true,
            "attrs": {
                "module": {
                    "comment": "Helps you find useful attrs and modules",
                    "type": "raw",
                    "value": "UsdGeom"
                }
            },
            "code": [
                "list = dir(${module})",
                "print('Module: ', '${module}')",
                "for item in list:",
                "    if not '__' in item:",
                "        print('Main Attribute: ', item)",
                "        # print(dir(getattr(${module}, item)))",
                "        sub_list = dir(getattr(${module}, item))",
                "        new_list = []",
                "        for sub_item in sub_list:",
                "            if not '__' in sub_item:",
                "                new_list.append(sub_item)",
                "            else:",
                "                pass",
                "        print('Sub List: ', new_list)",
                "                ",
                "    "
            ]
        }
    }
}